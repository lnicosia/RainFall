class N
{
	public:
		N(int nb)
		{
			this = 0x8048848; // contains address of N::operator+()
			this->nb = nb;
		}

		void setAnnotation(char *str)
		{
			memcpy(this->buf, str, strlen(str));
		}

		N& operator+(N &nb)
		{
			return this->nb + nb;
		}

		N& operator-(N &nb)
		{
			return this->nb - nb;
		}

	private:
		char 	buf[100];
		int		nb;
};

void main(int ac, char **av)
{
	N *N1;
	N *N2;

	if (ac < 2)
		_exit(1);
	N1 = new N(5);
	N2 = new N(6);
	N1->setAnnotation(av[1]);
	return N2->operator+(N1); // same as return N2 + N1;
}
