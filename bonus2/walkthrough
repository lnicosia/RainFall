Ici le programme possède 2 buffers de respectivement 40 et 32 bytes dans lesquels il strncpy av[1] puis av[2]
La première copie est donc protégée. Cependant dans la fonction greetuser(), on choisit une de ces 3 strings
en fonction de la variable d'environnement LANG:
_"Hyvää päivää " si LANG=="fi"
_"Goedemiddag! " si LANG=="nl"
_"Hello " sinon
On strcat ensuite cette string avec le premier buffer du main, celui qui contient la copie d'av[1].
Ici, le strcat n'a pas de protection. Si av[1] ne contient pas de '\0', la copie ne s'arretera pas comme prevu.
On peut le tester facilement en envoyant 40 chars ou + (la taille du buffer qui acueille la copie d'av[1]).
On segfault effectivement.
Cependant, on se rend compte qu'on arrive pas à écraser la totalité de la sauvegarde d'eip, peu importe
les inputs qu'on donne. En effet, si on laisse LANG par défaut, la string "Hello " est utilisée et ne permet
pas d'atteindre la fin d'eip après le strcat. Il faut donc export LANG="fi" ou LANG="nl".
Une fois cela fait, on peut écraser la sauvegarde d'eip de greetuser(). On va une fois de plus 
exporter 200 NOPs et un shellcode dans l'env puis faire return greetuser() au milieu des NOPs.
export LANG="fi"
export SHELLCODE=$(python -c 'print "\x90"*200 + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80"')
$(perl -le 'print "A"x40') $(perl -le 'print "B"x18 . "\x91\xf8\xff\xbf"')
