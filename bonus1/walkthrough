Ici le code est assez simple à comprendre:
On a un buffer de 40 octets, un un entier qui doit être égal à 0x574f4c46 pour ouvrir un shell.
Cependant notre memcpy prend comme taille 4 x av[1] mais seulement si av[1] est inférieur à 10.
On ne peut donc pas dépasser les 40 octets et écraser la valeur de l'entier
Cependant, de part la manière dont sont représentés les entiers dans la mémoire, lorsqu'on envoie
une petite valeur négative, par exemple -20, on obtient 0xffffffec.
Une fois multiplié par 4, le nombre redevient positif mais vaut 0xffffffb0 / 4294967216.
Pour obtenir une petite valeur positive après le x4, j'en déduis qu'il faut envoyer
une très grosse valeur négative.
En effet lorsqu'on envoie INT_MIN - N, on obtient Nx4 comme taille après la multiplication
Il va falloir memcpy la taille du buffer + les 4 bytes de notre entier, soit 44 bytes.
Il faut donc envoyer INT_MAX - 44/4, ie INT_MAX - 11, ie -2147483637
On a ensuite juste a ecrire 40x 'A' puis le nombre auquel doit être égal nb, 0x574f4c46
./bonus1 -2147483637 $(perl -le 'print "A"x40 . "\x46\x4c\x4f\x57"')
